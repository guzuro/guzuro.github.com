{"version":3,"sources":["./src/app/dashboard/warehouse/warehouse-routing.module.ts","./src/app/dashboard/warehouse/warehouse.module.ts","./src/app/dashboard/warehouse/warehouse-dashboard/warehouse-dashboard.component.ts","./src/app/dashboard/warehouse/warehouse-dashboard/warehouse-dashboard.component.html","./src/app/dashboard/warehouse/warehouse-monitor-list/warehouse-monitor-list.component.html","./src/app/dashboard/warehouse/warehouse-monitor-list/warehouse-monitor-list.component.ts","./src/app/dashboard/warehouse/warehouse-monitor-item/warehouse-monitor-item.component.html","./src/app/dashboard/warehouse/warehouse-monitor-item/warehouse-monitor-item.component.ts"],"names":[],"mappings":"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","file":"warehouse-warehouse-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WarehouseDashboardComponent } from './warehouse-dashboard/warehouse-dashboard.component';\r\nimport { WarehouseMonitorListComponent } from './warehouse-monitor-list/warehouse-monitor-list.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: WarehouseDashboardComponent },\r\n  { path: 'orders-wait', component: WarehouseMonitorListComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class WarehouseRoutingModule {}\r\n","import { FormsModule } from '@angular/forms';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WarehouseMonitorListComponent } from './warehouse-monitor-list/warehouse-monitor-list.component';\nimport { WarehouseDashboardComponent } from './warehouse-dashboard/warehouse-dashboard.component';\nimport { WarehouseRoutingModule } from './warehouse-routing.module';\nimport { WarehouseMonitorItemComponent } from './warehouse-monitor-item/warehouse-monitor-item.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatTableModule } from '@angular/material/table';\n\n@NgModule({\n  declarations: [\n    WarehouseMonitorListComponent,\n    WarehouseDashboardComponent,\n    WarehouseMonitorItemComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    WarehouseRoutingModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatTableModule,\n  ],\n})\nexport class WarehouseModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-warehouse-dashboard',\n  templateUrl: './warehouse-dashboard.component.html',\n  styleUrls: ['./warehouse-dashboard.component.scss'],\n})\nexport class WarehouseDashboardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"mt-5\">\n  <a routerLink=\"orders-wait\">Заказы к отгрузке</a>\n</div>\n<div>\n  <a routerLink=\"/dashboard/account-info\">Данные учетной записи</a>\n</div>\n","<div class=\"mt-5\" *ngFor=\"let order of orders\" [ngSwitch]=\"order.order.status\">\n  <div *ngSwitchCase=\"'Ожидает погрузки склад 1'\">\n    <h5>СКЛАД №1</h5>\n    <app-warehouse-monitor-item\n      [orderId]=\"order.uid\"\n      [orders]=\"order\"\n    ></app-warehouse-monitor-item>\n  </div>\n  <div *ngSwitchCase=\"'Ожидает погрузки склад 2'\">\n    <h5>СКЛАД №2</h5>\n    <app-warehouse-monitor-item\n      [orderId]=\"order.uid\"\n      [orders]=\"order\"\n    ></app-warehouse-monitor-item>\n  </div>\n  <div *ngSwitchCase=\"'Ожидает погрузки склад 3'\">\n    <h5>СКЛАД №3</h5>\n    <app-warehouse-monitor-item\n      [orderId]=\"order.uid\"\n      [orders]=\"order\"\n    ></app-warehouse-monitor-item>\n  </div>\n  <div *ngSwitchCase=\"'Ожидает погрузки склад 4'\">\n    <h5>СКЛАД №4</h5>\n    <app-warehouse-monitor-item\n      [orderId]=\"order.uid\"\n      [orders]=\"order\"\n    ></app-warehouse-monitor-item>\n  </div>\n  <div *ngSwitchCase=\"'Ожидает погрузки склад 5'\">\n    <h5>СКЛАД №5</h5>\n    <app-warehouse-monitor-item\n      [orderId]=\"order.uid\"\n      [orders]=\"order\"\n    ></app-warehouse-monitor-item>\n  </div>\n  <div *ngSwitchCase=\"'Ожидает погрузки склад 6'\">\n    <h5>СКЛАД №6</h5>\n    <app-warehouse-monitor-item\n      [orderId]=\"order.uid\"\n      [orders]=\"order\"\n    ></app-warehouse-monitor-item>\n  </div>\n</div>\n\n<app-back-button></app-back-button>\n","import { OrderService } from 'src/app/services/order.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Order } from 'src/app/models/order';\n\n@Component({\n  selector: 'app-warehouse-monitor-list',\n  templateUrl: './warehouse-monitor-list.component.html',\n  styleUrls: ['./warehouse-monitor-list.component.scss'],\n})\nexport class WarehouseMonitorListComponent implements OnInit {\n  orders: any[] = [];\n\n  constructor(private orderService: OrderService) {}\n\n  ngOnInit(): void {\n    this.getOrders();\n  }\n\n  getOrders() {\n    let sub = this.orderService.getAllOrdersId().subscribe((items) => {\n      items.map((i) => {\n        if (\n          i.order.status == 'Ожидает погрузки склад 1' ||\n          i.order.status == 'Ожидает погрузки склад 2' ||\n          i.order.status == 'Ожидает погрузки склад 3' ||\n          i.order.status == 'Ожидает погрузки склад 4' ||\n          i.order.status == 'Ожидает погрузки склад 5' ||\n          i.order.status == 'Ожидает погрузки склад 6' ||\n          i.order.status == 'Загружен на складе 1' ||\n          i.order.status == 'Загружен на складе 2' ||\n          i.order.status == 'Загружен на складе 3' ||\n          i.order.status == 'Загружен на складе 4' ||\n          i.order.status == 'Загружен на складе 5' ||\n          i.order.status == 'Загружен на складе 6'\n        ) {\n          this.orders.push(i);\n        }\n      });\n      console.log(this.orders);\n      sub.unsubscribe();\n    });\n  }\n}\n","<mat-accordion *ngIf=\"orders\">\n  <mat-expansion-panel class=\"mb-3\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Заказ № <b> {{ orders.uid }} </b>\n      </mat-panel-title>\n\n      <mat-panel-description>\n        <span *ngIf=\"orders.order.status == 'Доставлен'\"> Доставлен </span>\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <b> СТАТУC: </b>{{ orders.order.status }} <br />\n    <b> Дата/время прибытия к базе: </b\n    >{{ orders.order.shipDetails.date | date: \"shortDate\" }},\n    {{ orders.order.shipDetails.time }}\n\n    <table\n      mat-table\n      [dataSource]=\"orders.order.items\"\n      class=\"mt-3 mat-elevation-z8\"\n    >\n      <ng-container matColumnDef=\"Склад\">\n        <th mat-header-cell *matHeaderCellDef>Склад</th>\n        <td mat-cell *matCellDef=\"let itemsToShip\">\n          {{ itemsToShip.warehouse }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"ШК\">\n        <th mat-header-cell *matHeaderCellDef>Штрихкод</th>\n        <td mat-cell *matCellDef=\"let itemsToShip\">\n          {{ itemsToShip.barcode }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Номенклатура\">\n        <th mat-header-cell *matHeaderCellDef>Номенклатура</th>\n        <td mat-cell *matCellDef=\"let itemsToShip\">\n          {{ itemsToShip.itemUid.name }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Количество\">\n        <th mat-header-cell *matHeaderCellDef>Количество, тонн</th>\n        <td mat-cell *matCellDef=\"let itemsToShip\">{{ itemsToShip.count }}</td>\n      </ng-container>\n      <ng-container matColumnDef=\"Загружен\">\n        <th mat-header-cell *matHeaderCellDef>Загружен</th>\n        <td mat-cell *matCellDef=\"let itemsToShip\">\n          <input\n            class=\"example-margin\"\n            type=\"checkbox\"\n            [checked]=\"itemsToShip.packed\"\n            (change)=\"updatePackedStatus($event, itemsToShip)\"\n            [(ngModel)]=\"itemsToShip.packed\"\n            #packed\n            [disabled]=\"itemsToShip.packed\"\n          />\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n  </mat-expansion-panel>\n</mat-accordion>\n\n<app-back-button></app-back-button>","import { ItemsService } from './../../../services/items.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Order } from 'src/app/models/order';\nimport { BarcodesService } from 'src/app/services/barcodes.service';\nimport { OrderService } from 'src/app/services/order.service';\n\n@Component({\n  selector: 'app-warehouse-monitor-item',\n  templateUrl: './warehouse-monitor-item.component.html',\n  styleUrls: ['./warehouse-monitor-item.component.scss'],\n})\nexport class WarehouseMonitorItemComponent implements OnInit {\n  @Input() orders: Order;\n  @Input() orderId: string;\n\n  displayedColumns: string[] = [\n    'Склад',\n    'ШК',\n    'Номенклатура',\n    'Количество',\n    'Загружен',\n  ];\n\n  packed: boolean;\n\n  constructor(\n    private orderService: OrderService,\n    private barcodeService: BarcodesService\n  ) {}\n  userRole: string;\n\n  ngOnInit(): void {\n    this.userRole = localStorage.getItem('role');\n  }\n\n  updatePackedStatus(value, itemToUpdate) {\n    this.barcodeService.changeBarcodePacked(itemToUpdate, this.orderId);\n    this.changeStatus(\n      this.orderId,\n      itemToUpdate.barcode,\n      itemToUpdate.warehouse\n    );\n  }\n\n  changeStatus(id: string, barcode: string, status: number) {\n    let str = `Штрихкод ${barcode} загружен`;\n    this.orderService.changeOrderStatus(id, str, 3);\n  }\n}\n"],"sourceRoot":"webpack:///"}