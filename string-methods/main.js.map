{"version":3,"sources":["./src/app/lenght/lenght.component.ts","./src/app/lenght/lenght.component.html","./src/app/to-upper-case/to-upper-case.component.ts","./src/app/to-upper-case/to-upper-case.component.html","./src/environments/environment.ts","./src/app/slice/slice.component.ts","./src/app/slice/slice.component.html","./src/app/replace/replace.component.html","./src/app/replace/replace.component.ts","./src/app/concat/concat.component.html","./src/app/concat/concat.component.ts","./src/app/char-at/char-at.component.html","./src/app/char-at/char-at.component.ts","./src/app/trim/trim.component.ts","./src/app/trim/trim.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/to-lower-case/to-lower-case.component.ts","./src/app/to-lower-case/to-lower-case.component.html","./src/app/app.module.ts","./src/app/index-of/index-of.component.html","./src/app/index-of/index-of.component.ts","./src/app/split/split.component.ts","./src/app/split/split.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\nselector: 'app-lenght',\ntemplateUrl: './lenght.component.html',\nstyleUrls: ['./lenght.component.css']\n})\nexport class LenghtComponent {\n\n  @Input() inputString: string = \"\";\n  constructor() { }\n\n  get stringLengthSpaces():number{\n    return this.inputString.length\n  }\n\n  get stringLengthClear():number{\n    return this.inputString.replace(/ /g, \"\").length\n  }\n\n}\n","<div class=\"content\">\r\n\r\n\r\n<h4>.length method</h4>\r\nstring length (with spaces) = {{stringLengthSpaces}} <br>\r\nstring length (without spaces) = {{stringLengthClear}}\r\n</div>","import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-to-upper-case',\n  templateUrl: './to-upper-case.component.html',\n  styleUrls: ['./to-upper-case.component.css']\n})\nexport class ToUpperCaseComponent {\n  @Input() inputString:string = \"\";\n\n  constructor() { }\n\n  get outputString():string{\n    return this.inputString.toUpperCase();\n  }\n\n}\n","<div class=\"content\">\n  <h4>.toLowerCase() method</h4>\n  Result: {{outputString}}\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-slice',\n  templateUrl: './slice.component.html',\n  styleUrls: ['./slice.component.css']\n})\nexport class SliceComponent {\n  @Input() inputString:string = \"\";\n  start:number = 0;\n  end:number = 0;\n  constructor() { }\n\n  get outputString():string{\n    return this.inputString.slice(this.start, this.end);\n    }\n\n}\n","<div class=\"content\">\n\n  <h4>.slice(start, end) method</h4>\n  <div class=\"form-group\">\n    <label for=\"concat_input\">Start index</label>\n    <input [(ngModel)]=\"start\" type=\"text\" class=\"form-control\" id=\"start_input\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"concat_input\">End index</label>\n    <input [(ngModel)]=\"end\" type=\"text\" class=\"form-control\" id=\"end_input\">\n  </div>\n  Result: {{outputString}}\n</div>\n","<div class=\"content\">\n  <h4>.replace(term, newTerm) method</h4>\n  <div class=\"form-group\">\n    <label for=\"concat_input\">Type term</label>\n    <input [(ngModel)]=\"term\" type=\"text\" class=\"form-control\" id=\"term_input\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"concat_input\">type new term to replace</label>\n    <input [(ngModel)]=\"newTerm\" type=\"text\" class=\"form-control\" id=\"newTerm_input\">\n  </div>\n\n  <p *ngIf=\"outputString\">\n    Result: {{outputString}}\n  </p>\n</div>\n","import { stripGeneratedFileSuffix } from '@angular/compiler/src/aot/util';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-replace',\n  templateUrl: './replace.component.html',\n  styleUrls: ['./replace.component.css']\n})\nexport class ReplaceComponent {\n\n  @Input() inputString:string = \"\";\n  term:string = \"\";\n  newTerm:string = \"\";\n\n  constructor() { }\n\n  get outputString():string {\n    return this.inputString.replace(this.term, this.newTerm);\n  }\n\n}\n","<div class=\"content\">\n<h4>.concat(string) method</h4>\n<div class=\"form-group\">\n  <label for=\"concat_input\">String concatinate to</label>\n  <input [(ngModel)]=\"concat_string\" type=\"text\" class=\"form-control\" id=\"concat_input\">\n</div>\n\n<p *ngIf=\"outputString\">\n  Result: {{outputString}}\n</p>\n</div>","import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-concat',\n  templateUrl: './concat.component.html',\n  styleUrls: ['./concat.component.css']\n})\nexport class ConcatComponent {\n  \n  concat_string:string = \"\";\n  @Input() inputString: string = \"\"\n  \n  constructor() { }\n\n  get outputString():string{\n    return this.inputString.concat(this.concat_string);\n  }\n}\n","<div class=\"content\">\n  <h4>.charAt(index) method</h4>\n  <div class=\"form-group\">\n    <label for=\"index_input\">Enter index: </label>\n    <input [(ngModel)]=\"index\" class=\"form-control\" type=\"text\" id=\"index_input\" placeholder=\"start typing...\" />\n  </div>\n\n  <p *ngIf=\"index>=0 && inputString\">\n    There is symbol <b>' {{charByIndex}} '</b> by index {{index}}\n  </p>\n</div>\n","import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-char-at',\n  templateUrl: './char-at.component.html',\n  styleUrls: ['./char-at.component.css']\n})\nexport class CharAtComponent {\n  @Input() inputString: string = \"\";\n  index:number = 0;\n  constructor() { }\n\n  get charByIndex():string{\n    return this.inputString.charAt(this.index);\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-trim',\n  templateUrl: './trim.component.html',\n  styleUrls: ['./trim.component.css']\n})\nexport class TrimComponent  {\n  @Input() inputString:string = \"\";\n  constructor() { }\n\n  get outputString():string{\n    return this.inputString.trim();\n  }\n}\n","<div class=\"content\">\n    <h4>.trim() method</h4>\n    Result: {{outputString}}\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  inputString:string = \"\";\n\n  title = 'string-methods';\n}\n","<div class=\"container\">\r\n  <h3>Enter some string</h3>\r\n  <div class=\"form-group\">\r\n    <label for=\"string_input\">String: </label>\r\n    <input [(ngModel)]=\"inputString\" class=\"form-control\" type=\"text\" id=\"string_input\" placeholder=\"start typing...\" />\r\n  </div>\r\n\r\n  <app-lenght [inputString]=\"inputString\"></app-lenght>\r\n  <app-char-at [inputString]=\"inputString\"></app-char-at>\r\n  <app-concat [inputString]=\"inputString\"></app-concat>\r\n  <app-index-of [inputString]=\"inputString\"></app-index-of>\r\n  <app-replace [inputString]=\"inputString\"></app-replace>\r\n  <app-slice [inputString]=\"inputString\"></app-slice>\r\n  <app-split [inputString]=\"inputString\"></app-split>\r\n  <app-to-upper-case [inputString]=\"inputString\"></app-to-upper-case>\r\n  <app-to-lower-case [inputString]=\"inputString\"></app-to-lower-case>\r\n  <app-trim [inputString]=\"inputString\"></app-trim>\r\n</div>\r\n","import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-to-lower-case',\n  templateUrl: './to-lower-case.component.html',\n  styleUrls: ['./to-lower-case.component.css']\n})\nexport class ToLowerCaseComponent {\n\n  @Input() inputString:string = \"\";\n\n  constructor() { }\n\n  get outputString():string{\n    return this.inputString.toLowerCase();\n  }\n\n}\n","<div class=\"content\">\n\n<h4>.toLowerCase() method</h4>\nResult: {{outputString}}\n<br>\n\n</div>","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { LenghtComponent } from './lenght/lenght.component';\nimport { CharAtComponent } from './char-at/char-at.component';\nimport { ConcatComponent } from './concat/concat.component';\nimport { IndexOfComponent } from './index-of/index-of.component';\nimport { ReplaceComponent } from './replace/replace.component';\nimport { SliceComponent } from './slice/slice.component';\nimport { SplitComponent } from './split/split.component';\nimport { ToUpperCaseComponent } from './to-upper-case/to-upper-case.component';\nimport { ToLowerCaseComponent } from './to-lower-case/to-lower-case.component';\nimport { TrimComponent } from './trim/trim.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LenghtComponent,\n    CharAtComponent,\n    ConcatComponent,\n    IndexOfComponent,\n    ReplaceComponent,\n    SliceComponent,\n    SplitComponent,\n    ToUpperCaseComponent,\n    ToLowerCaseComponent,\n    TrimComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"content\">\n\n  <h4>.indexOf(term, index) method</h4>\n  <div class=\"form-group\">\n    <label for=\"concat_input\">Type term</label>\n    <input [(ngModel)]=\"term\" type=\"text\" class=\"form-control\" id=\"concat_input\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"concat_input\">Enter index</label>\n    <input [(ngModel)]=\"index\" type=\"text\" class=\"form-control\" id=\"index_input\">\n  </div>\n\n  <p *ngIf=\"outputString>=0\">\n    Result: {{outputString}}\n  </p>\n</div>\n","import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-index-of',\n  templateUrl: './index-of.component.html',\n  styleUrls: ['./index-of.component.css']\n})\nexport class IndexOfComponent {\n  @Input() inputString:string = \"\";\n\n  term:string = \"\";\n  index:number = 0;\n\n  constructor() { }\n  \n  get outputString():number{\n    return this.inputString.indexOf(this.term, this.index);\n  }\n\n}\n","import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-split',\n  templateUrl: './split.component.html',\n  styleUrls: ['./split.component.css']\n})\nexport class SplitComponent  {\n  @Input() inputString:string = \"\";\n  term:string = \"\";\n\n  constructor() { }\n\n  get outputString():string[]{\n    return this.inputString.split(this.term);\n  }\n\n}\n","<div class=\"content\">\n\n<h4>.split(term) method</h4>\n<div class=\"form-group\">\n  <label for=\"concat_input\">Type term</label>\n  <input [(ngModel)]=\"term\" type=\"text\" class=\"form-control\" id=\"term_input\">\n</div>\nResult: {{outputString}}\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}